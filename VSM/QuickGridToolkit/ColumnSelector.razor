@typeparam TGridItem
@if (ColumnManager != null && Visible)
{
    <div class="">
        <div style="columns: 3;">
            @foreach (var col in ColumnManager.Columns)
            {
                <div class="form-check">
                    <input type="checkbox" @bind="col.Visible" @bind:after="HandleChangeAsync" id="@col.ColumnId" class="form-check-input" />
                    <label class="form-check-label" for="@col.ColumnId">@col.FullTitle</label>
                </div>
            }
        </div>
        <p class="mt-1">
            <small class="text-info text-decoration-underline action" @onclick="UncheckAll">Uncheck all</small>
            <small class="text-info text-decoration-underline action ms-2" @onclick="CheckAll">Check all</small>
            @* <small>Drag and drop to reorder columns</small> *@
        </p>
    </div>
}
@code {
    [Parameter] public bool Visible { get; set; } = true;
    [Parameter] public ColumnManager<TGridItem>? ColumnManager { get; set; }
    [Parameter] public EventCallback SelectionChanged { get; set; }

    private Task HandleChangeAsync() => SelectionChanged.InvokeAsync();

    private void UncheckAll()
    {
        if (ColumnManager == null) return;

        foreach (var col in ColumnManager.Columns)
        {
            col.Visible = false;
        }

        SelectionChanged.InvokeAsync();
    }

    private void CheckAll()
    {
        if (ColumnManager == null) return;

        foreach (var col in ColumnManager.Columns)
        {
            col.Visible = true;
        }

        SelectionChanged.InvokeAsync();
    }
}