namespace VSM.Client.Datamodel.DTO
{
    /*public class UserDTO
    {
        public string Initials { get; set; }
    }*/


    public class RootFolderDTO
    {
        public int Id { get; set; } //ID of this DTO
        public string Path { get; set; } // like /parent/folder. parent would most often be a domain url
        public uint Folder_Id { get; set; } //Id to folder' FolderNodeDTO. unit24 would be sufficient
        public string Owner { get; set; } // the initials of the owner
        public string Approvers { get; set; } // the initials of the approvers (co-owners)
        public bool Active_Cleanup { get; set; } // indicates if the folder is actively being cleaned up
    }


    public class FolderNodeDTO
    {
        public int Id { get; set; }
        public int ParentId { get; set; } = 0; // Default to 0, indicating no parent
        public string Name { get; set; } = "";
        public byte TypeID { get; set; } = 0;
        public uint NodeAttributes { get; set; }
    }

    // NodeAttributesDTO is only used for nodes with metatMost nodes is just and organization of subfolders and will not contain other metadata
    public class NodeAttributesDTO
    {
        // nodeID
        public int NodeID { get; set; } 
        public byte RetentionID { get; set; } = 0;

        // is set to last modification date + the retention period, when the user selects a retention date
        public DateOnly? RetentionDate { get; set; } = null;
        public DateOnly? Modified { get; set; } = null; // null for InnerNodes but for the simulation this will be the last time any file in the simulation was modified
    }

    // so far we know: 
    // InnerNode, 
    // VTSSimulation, which is currently a LeafNode but that might change
    public class FolderTypeDTO
    {
        public byte Id { get; set; }
        public string Name { get; set; } = "InnerNode";
    }

    // so far we know teh following value for Name:
    // Cleaned, is IsSystemManaged=true
    // CleanupIssue,    
    // MarkedForCleanup, 
    // New,
    // +1 round 
    // +3 rounds 
    // +6 rounds 
    // +12 rounds 
    // +24 rounds 
    // +36 rounds 
    // longterm,
    // path protected,
    // -----------------
    // a round would normally be 30 days but we can go down to 1 week and 1 day for testing purposes
    public class RetentionDTO
    {
        public byte Id { get; set; }
        public string Name { get; set; } = "";
        public string IsSystemManaged { get; set; } = "";
        public byte DisplayRank
        {
            get; set;
        } = 0; // In what order to display the values
    }

}